[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Github\n  \n  \n    \n     Mastodon\n  \n\n      \n\n\nI am working at the University of Luxembourg; in the Departement of Life Sciences and Medecine, providing services to the researchers."
  },
  {
    "objectID": "about.html#licence",
    "href": "about.html#licence",
    "title": "About",
    "section": "Licence",
    "text": "Licence\n  This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License except for the borrowed and mentioned with proper source: statements."
  },
  {
    "objectID": "posts/teething-process/index.html",
    "href": "posts/teething-process/index.html",
    "title": "teething",
    "section": "",
    "text": "Teething can be tough for kids, and so for the parents. For our first kid, it was actually pretty painful. Then, I wanted to see how synchronize the second kid would be with the first one."
  },
  {
    "objectID": "posts/teething-process/index.html#input-data",
    "href": "posts/teething-process/index.html#input-data",
    "title": "teething",
    "section": "Input data",
    "text": "Input data\nThis was an old input, now I would use the datapasta rstudio addin by Miles Mc Bain to get a tribble from any spreadsheet.\n\ntibble::tribble(\n      ~kid,        ~date,                ~teeth,\n   \"Anouk\", \"2014-03-31\", \"incisive inf cent D\",\n   \"Anouk\", \"2014-04-18\", \"incisive inf cent G\",\n   \"Anouk\", \"2014-07-02\", \"incisive sup cent D\",\n   \"Anouk\", \"2014-06-09\", \"incisive sup cent G\",\n   \"Anouk\", \"2014-07-03\",  \"incisive sup lat G\",\n   \"Anouk\", \"2014-07-26\",  \"incisive sup lat D\",\n   \"Anouk\", \"2014-08-12\",  \"incisive inf lat D\",\n   \"Anouk\", \"2014-10-12\",  \"incisive inf lat G\",\n   \"Anouk\", \"2015-01-04\",        \"prem 1 sup G\",\n   \"Anouk\", \"2015-01-11\",        \"prem 1 sup G\",\n   \"Anouk\", \"2015-01-11\",        \"prem 1 inf D\",\n   \"Anouk\", \"2015-02-01\",        \"prem 1 inf D\",\n   \"Anouk\", \"2015-02-01\",        \"canine sup G\",\n   \"Anouk\", \"2015-02-12\",        \"canine sup D\",\n   \"Anouk\", \"2015-03-28\",        \"canine inf D\",\n   \"Anouk\", \"2015-04-04\",        \"canine inf G\", # imputed data\n   \"Anouk\", \"2015-10-15\",        \"prem 2 inf G\",\n   \"Anouk\", \"2015-10-15\",        \"prem 2 inf D\",\n   \"Anouk\", \"2015-12-21\",        \"prem 2 sup D\",\n   \"Anouk\", \"2016-03-01\",        \"prem 2 sup G\",\n   \"Irène\", \"2017-05-11\", \"incisive inf cent D\",\n   \"Irène\", \"2017-05-18\", \"incisive inf cent G\",\n   \"Irène\", \"2017-07-11\", \"incisive sup cent D\",\n   \"Irène\", \"2017-07-25\", \"incisive sup cent G\",\n   \"Irène\", \"2017-08-03\", \"incisive sup lat D\",\n   \"Irène\", \"2017-08-04\", \"incisive inf lat D\",\n   \"Irène\", \"2017-08-04\", \"incisive inf lat G\",\n   \"Irène\", \"2017-08-23\", \"incisive sup lat G\",\n   \"Irène\", \"2017-09-30\",        \"prem 1 inf D\",\n   \"Irène\", \"2017-09-20\",        \"prem 1 inf G\",\n   \"Irène\", \"2017-10-22\",        \"prem 1 sup D\",\n   \"Irène\", \"2017-10-20\",        \"prem 1 sup G\",\n   \"Irène\", \"2018-04-04\",        \"canine sup D\",\n   \"Irène\", \"2018-04-28\",        \"canine inf D\",\n   \"Irène\", \"2018-05-15\",        \"canine sup G\",\n   \"Irène\", \"2018-05-25\",        \"prem 2 inf G\",\n   \"Irène\", \"2018-06-01\",        \"canine inf G\",\n   \"Irène\", \"2018-06-07\",        \"prem 2 inf D\",\n   \"Irène\", \"2018-09-04\",        \"prem 2 sup D\") -&gt; teeth\n\n\ncount(teeth, kid)\n\n# A tibble: 2 × 2\n  kid       n\n  &lt;chr&gt; &lt;int&gt;\n1 Anouk    20\n2 Irène    19\n\n\nhttps://en.wikipedia.org/wiki/Dental_notation\nPrimary Dentition\n        upper right - 5             upper left - 6\n             55 54 53 52 51 | 61 62 63 64 65 \n          R --------------------------------- L\n             85 84 83 82 81 | 71 72 73 74 75 \n        lower right - 8             lower left - 7\n\n I - incisor\n C - canine\n P - premolar\n M - molar"
  },
  {
    "objectID": "posts/teething-process/index.html#plotting",
    "href": "posts/teething-process/index.html#plotting",
    "title": "teething",
    "section": "Plotting",
    "text": "Plotting\n\nteeth %&gt;%\n  mutate(date = parse_date(date),\n         t_teeth = word(teeth, 1),\n         age = case_when(kid == \"Anouk\" ~ date - ymd(\"20130828\"),\n                         kid == \"Irène\" ~ date - ymd(\"20160922\")),\n         age2 = as.numeric(age) / 365) -&gt; teeth_tp\nteeth_tp %&gt;%\n  group_by(kid) %&gt;%\n  arrange(age) %&gt;%\n  mutate(n_teeth = row_number()) %&gt;% \n  ggplot(aes(x = age2, y = n_teeth, colour = kid), width = 20) +\n  geom_line() +\n  geom_point(aes(shape = t_teeth)) +\n  scale_y_continuous(breaks = c(1, seq(5, 20, 5))) +\n  theme_bw(14) +\n  labs(x = \"age (years)\",\n       y = \"# teeth\",\n       shape = \"type\")"
  },
  {
    "objectID": "posts/teething-process/index.html#animate",
    "href": "posts/teething-process/index.html#animate",
    "title": "teething",
    "section": "Animate",
    "text": "Animate\n\nlibrary(gganimate)\nteeth_tp %&gt;%\n   group_by(kid) %&gt;%\n   arrange(age) %&gt;%\n   mutate(n_teeth = row_number()) %&gt;% \n   ggplot(aes(x = age2, y = n_teeth, colour = kid)) +\n   geom_line() +\n   # to try transition_reveal()\n   transition_reveal(kid, n_teeth) +\n   #ease_aes(\"linear\") +\n   shadow_trail() +\n   geom_point(aes(shape = t_teeth), size = 5) +\n   scale_y_continuous(breaks = c(1, seq(5, 20, 5))) +\n   scale_color_manual(values = wesanderson::wes_palette(\"GrandBudapest1\")[3:4]) + \n   theme_bw(14) +\n   labs(x = \"age (years)\",\n        y = \"# teeth\",\n        shape = \"type\") -&gt; tp\nanimate(tp, nframes = 60)\nanim_save(\"teething.gif\", last_animation())"
  },
  {
    "objectID": "posts/starting-learning-rust/index.html",
    "href": "posts/starting-learning-rust/index.html",
    "title": "Starting to learn Rust",
    "section": "",
    "text": "I am very happy with  but I want to learn something new, another programming language. The desire comes with several needs\n\n\n\nA compiled language\n\nSpeed\nStrict syntax, almost pedantic\n\nStrongly typed\n\n\n\n\n\nFull of functional programming\nGreat packages offered by a great community (crates)\n\nTurns out this language is Rust."
  },
  {
    "objectID": "posts/starting-learning-rust/index.html#rationale",
    "href": "posts/starting-learning-rust/index.html#rationale",
    "title": "Starting to learn Rust",
    "section": "",
    "text": "I am very happy with  but I want to learn something new, another programming language. The desire comes with several needs\n\n\n\nA compiled language\n\nSpeed\nStrict syntax, almost pedantic\n\nStrongly typed\n\n\n\n\n\nFull of functional programming\nGreat packages offered by a great community (crates)\n\nTurns out this language is Rust."
  },
  {
    "objectID": "posts/starting-learning-rust/index.html#advantages",
    "href": "posts/starting-learning-rust/index.html#advantages",
    "title": "Starting to learn Rust",
    "section": "Advantages",
    "text": "Advantages\n\nCompiler\nIt is incredibly helpful. I am using VScode with the extension rust-analyser that provides immediate feedback, great suggestions to both warnings and errors.\n\n\nBonus: the  logo\nIt has the two things I like a lot:\n\nA  from  (a chainring)\nA big R that looks very much like \n\n\n\n\nRust logo"
  },
  {
    "objectID": "posts/starting-learning-rust/index.html#learning-material",
    "href": "posts/starting-learning-rust/index.html#learning-material",
    "title": "Starting to learn Rust",
    "section": "Learning material",
    "text": "Learning material\n\n\n\nI am using so far three resources:\n\nThe Programming Rust book (Ed. O’Reilly). From a recommendation by Stefan Baumgartner\nThe official documentation that include a lot of example.\nThe “How to learn Rust” course by Tim McManara. From a recommendation of Jonathan Caroll"
  },
  {
    "objectID": "posts/starting-learning-rust/index.html#first-project-umi-trimming",
    "href": "posts/starting-learning-rust/index.html#first-project-umi-trimming",
    "title": "Starting to learn Rust",
    "section": "First project: UMI trimming",
    "text": "First project: UMI trimming\nUMI stands for Unique Molecular Identifier.\nThe goal is reproduce some features from umi-tools especially the extract command.\nFor example, convert the following read\n@VH00666:90:AAAWVCCHV:1:1101:24026:1000\nGTCAGTTATAGCGGGCGCGCAAAAAAAAAAAAAAAAAAAGATCGGAAGAGCACACGTCTGAACTCCAGTCACTCCC\n[...]\ninto:\n@VH00666:90:AAAWVCCHV:1:1101:24026:1000_GTCAGT\nGCGGGCGCGCAAAAAAAAAAAAAAAAAAAGATCGGAAGAGCACACGTCTGAACTCCAGTCACTCCC\nThe UMI was GTCAGT and appended to the read name, while being removed from the sequence along with the TATA linker.\nThis project is here on"
  },
  {
    "objectID": "posts/winter-is-coming/index.html",
    "href": "posts/winter-is-coming/index.html",
    "title": "winter is coming",
    "section": "",
    "text": "Snow during winter time. How unexpected this could be?\n\n\n\nVon backhaus in white"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ginolhac’s blog",
    "section": "",
    "text": "Denmark, ginolhac\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nStarting to learn Rust\n\n\n\n\n\n\n\nRust\n\n\n\n\nTrimming UMI\n\n\n\n\n\n\nAug 17, 2023\n\n\nAurélien Ginolhac\n\n\n\n\n\n\n  \n\n\n\n\nLaTex modern CV\n\n\n\n\n\n\n\nacademia\n\n\n\n\nHow to setup latex using tinytex\n\n\n\n\n\n\nMar 26, 2018\n\n\nAurélien Ginolhac\n\n\n\n\n\n\n  \n\n\n\n\nhome surveillance monitored via telegram\n\n\n\n\n\n\n\nPython\n\n\nDIY\n\n\nRasPI\n\n\n\n\nusing telepot and the NoIR camera\n\n\n\n\n\n\nJan 27, 2018\n\n\nAurelien Ginolhac\n\n\n\n\n\n\n  \n\n\n\n\ntweening a Poisson distribution\n\n\n\n\n\n\n\nR\n\n\nanimation\n\n\n\n\nusing tweenr and ggplot2\n\n\n\n\n\n\nDec 8, 2016\n\n\nAurélien Ginolhac\n\n\n\n\n\n\n  \n\n\n\n\nteething\n\n\n\n\n\n\n\nR\n\n\nanimation\n\n\n\n\nCompare teething for two kids\n\n\n\n\n\n\nJul 31, 2016\n\n\nAurélien Ginolhac\n\n\n\n\n\n\n  \n\n\n\n\nwinter is coming\n\n\n\n\n\n\n\nbike\n\n\n\n\nsnow on bike\n\n\n\n\n\n\nJan 25, 2015\n\n\nAurélien Ginolhac\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "karate/index.html",
    "href": "karate/index.html",
    "title": "Karate tabs",
    "section": "",
    "text": "This page is dedicated to tabs from the band karate made by fans. These tabs came from the original website.\nGeoff Farina is the Karate’s guitarist, many thanks to him for writing such nice songs. Have fun playing the incredible music made by Karate and please feel free to correct the tabs by sending an email to his author if you find any mistakes or new interpretations."
  },
  {
    "objectID": "karate/index.html#in-the-fisk-tank-2005",
    "href": "karate/index.html#in-the-fisk-tank-2005",
    "title": "Karate tabs",
    "section": "In the Fisk tank (2005)",
    "text": "In the Fisk tank (2005)\n\n\n\n\nSong\nAuthor\n\n\n\n\nStrange Fruit\nAurelien"
  },
  {
    "objectID": "karate/index.html#pockets-2004",
    "href": "karate/index.html#pockets-2004",
    "title": "Karate tabs",
    "section": "Pockets (2004)",
    "text": "Pockets (2004)\n\n\n\n\nSong\nAuthor\n\n\n\n\nWith Age\nTomatokiller\n\n\nTow Truck\nAurelien & Philip Tanimura\n\n\nWater\nMito Gegic\n\n\nThe State I’m in aka Goode Buy from Cobbs Creek Park\nMito Gegic\n\n\nPines\nAurelien"
  },
  {
    "objectID": "karate/index.html#some-boots-2002",
    "href": "karate/index.html#some-boots-2002",
    "title": "Karate tabs",
    "section": "Some boots (2002)",
    "text": "Some boots (2002)\n\n\n\n\nSong\nAuthor\n\n\n\n\nOriginal Spies\nPhilip Tanimura\n\n\nFirst Release\nAurelien Ginolhac & Philip Tanimura\n\n\nAirport\nPhilip Tanimura\n\n\nCorduroy\nPhilip Tanimura\n\n\nRemain Relaxed\nPhilip Tanimura & Aurelien"
  },
  {
    "objectID": "karate/index.html#cancel-sing-2001",
    "href": "karate/index.html#cancel-sing-2001",
    "title": "Karate tabs",
    "section": "Cancel / Sing (2001)",
    "text": "Cancel / Sing (2001)\n\n\n\n\nSong\nAuthor\n\n\n\n\nSing\nPhilip Tanimura"
  },
  {
    "objectID": "karate/index.html#unsolved-2000",
    "href": "karate/index.html#unsolved-2000",
    "title": "Karate tabs",
    "section": "Unsolved (2000)",
    "text": "Unsolved (2000)\n\n\n\n\nSong\nAuthor\n\n\n\n\nSmall Fires\nPhilip Tanimura\n\n\nThe lived-but-yet-named\nPhilip Tanimura\n\n\nSever\nPhilip Tanimura\n\n\nThe Roots and the Ruins\nPhilip Tanimura\n\n\nThe Roots and the Ruins (bass)\nCraig Wynne\n\n\nNumber Six\nCraig Wynne\n\n\nNumber Six (bass)\nCraig Wynne\n\n\nOne Less Blues\nAurelien & Antoine L.\n\n\nThe Angels Just Have to Show\nAurelien & Antoine L.\n\n\nThe Halo of the Strange\nAurelien & Philip Tanimura\n\n\nThis Day Next Year\nPhilip Tanimura\n\n\nThis Day Next Year (solo)\nCraig Wynne"
  },
  {
    "objectID": "karate/index.html#the-bed-is-in-the-ocean-1998",
    "href": "karate/index.html#the-bed-is-in-the-ocean-1998",
    "title": "Karate tabs",
    "section": "The Bed is in the Ocean (1998)",
    "text": "The Bed is in the Ocean (1998)\n\n\n\n\nSong\nAuthor\n\n\n\n\nThere are Ghosts\nPhilip Tanimura\n\n\nDiazapam\nPhilip Tanimura\n\n\nThe Last Wars\nPhilip Tanimura\n\n\nBass Sound\nAurelien\n\n\nUp nigths\nAurelien\n\n\nThe Same Stars\nPhilip Tanimura\n\n\nOutside is the Drama\nPhilip Tanimura\n\n\nFatal Strategies\nAurelien"
  },
  {
    "objectID": "karate/index.html#in-place-of-real-insight-1997",
    "href": "karate/index.html#in-place-of-real-insight-1997",
    "title": "Karate tabs",
    "section": "In Place of Real Insight (1997)",
    "text": "In Place of Real Insight (1997)\n\n\n\n\nSong\nAuthor\n\n\n\n\nNew Martini\nEeYoRe\n\n\nBass Sound\nAurelien\n\n\nToday or Tomorrow\nAurelien\n\n\nThis Plus Slow Song\nCraig Wynne"
  },
  {
    "objectID": "karate/index.html#operation-sand-1997",
    "href": "karate/index.html#operation-sand-1997",
    "title": "Karate tabs",
    "section": "Operation Sand (1997)",
    "text": "Operation Sand (1997)\n\n\n\n\nSong\nAuthor\n\n\n\n\nOperation Sand\nPhilip Tanimura"
  },
  {
    "objectID": "karate/index.html#karate-1995",
    "href": "karate/index.html#karate-1995",
    "title": "Karate tabs",
    "section": "Karate (1995)",
    "text": "Karate (1995)\n\n\n\n\nSong\nAuthor\n\n\n\n\nIf You Can Hold Your Breath\nPete DeStefano\n\n\nEvery Sister\nPhilip Tanimura\n\n\nCaffeine or Me?\nPhilip Tanimura"
  },
  {
    "objectID": "posts/latex-modern-cv/index.html#install-missing-packages",
    "href": "posts/latex-modern-cv/index.html#install-missing-packages",
    "title": "LaTex modern CV",
    "section": "install missing packages",
    "text": "install missing packages\ntlmgr install moderncv\ntlmgr install xcolor\ntlmgr install colortbl\ntlmgr install fancyhdr\ntlmgr install microtype\ntlmgr install pgf # to install tikz\ntlmgr install textgreek\ntlmgr install fontawesome\ntlmgr install lastpage\ntlmgr install marvosym \ntlmgr install greek-fontenc\ntlmgr install babel-greek\ntlmgr update --self --all\ntlmgr path add"
  },
  {
    "objectID": "posts/latex-modern-cv/index.html#issue-with-fontawesome",
    "href": "posts/latex-modern-cv/index.html#issue-with-fontawesome",
    "title": "LaTex modern CV",
    "section": "issue with fontawesome",
    "text": "issue with fontawesome\n\nreload / install fonts fmtutil-sys --all\n\nside effect, the Roboto condensed for Robert Rudis, ggplot2 theme is now working nicely!"
  },
  {
    "objectID": "posts/latex-modern-cv/index.html#solve-issue-of-nfss-corrupted",
    "href": "posts/latex-modern-cv/index.html#solve-issue-of-nfss-corrupted",
    "title": "LaTex modern CV",
    "section": "solve issue of NFSS corrupted",
    "text": "solve issue of NFSS corrupted\nfollowing this answer:\nthe error was completed with For encoding scheme LGR the defaults cmr/m/n do not form a valid font shape\ntlmgr install cbfonts\nallows to get the Greek letters working. Why the greek-fontenc and babel-greek was not sufficient? I don’t know"
  },
  {
    "objectID": "posts/latex-modern-cv/index.html#workflow",
    "href": "posts/latex-modern-cv/index.html#workflow",
    "title": "LaTex modern CV",
    "section": "Workflow",
    "text": "Workflow\n\nbibliography from pubmed to .bib using http://www.bioinformatics.org/texmed/ as biblio.bib\nfix gamma character {I}{F}{N}γ responses to {I}{F}{N}{$\\gamma$} responses\nfirst compilation, generate biblio.aux\nin plainyr_rev.bst, specify \"Ginolhac, A\" so my name gets underlined and bolded\nrun bibtex biblio to generate biblio.bbl\nsecond compilation to generate the pdf"
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html",
    "title": "home surveillance monitored via telegram",
    "section": "",
    "text": "The raspberry pi has always been appealing to me, but I needed a project to really get involved. After discussing with Eric Koncina who made several great applications with Pis, I decided to go for a home surveillance system.\nThe main objective was to see how often the neighbor cats are coming to our garden, because they are scaring our cat. It’s not a big deal, rather a justification for the pi project."
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#rationale",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#rationale",
    "title": "home surveillance monitored via telegram",
    "section": "",
    "text": "The raspberry pi has always been appealing to me, but I needed a project to really get involved. After discussing with Eric Koncina who made several great applications with Pis, I decided to go for a home surveillance system.\nThe main objective was to see how often the neighbor cats are coming to our garden, because they are scaring our cat. It’s not a big deal, rather a justification for the pi project."
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#materials",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#materials",
    "title": "home surveillance monitored via telegram",
    "section": "Materials",
    "text": "Materials\nI bought a Pi3 starter budget kit that contains:\n\nPi3\npower, 5V, 2.5A\ncase\nSD card 16 Go\n\nAdditionally, I purchased:\n\nPi camera NoIR\n\nWas hoping to get some decent pictures / videos with low light. Turned out that IR leds are needed. That goes in the TODO section.\nHere is an example of picture with low interior light. Colors are off, but quality is fine to me"
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#setting-up-the-pi",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#setting-up-the-pi",
    "title": "home surveillance monitored via telegram",
    "section": "Setting-up the pi",
    "text": "Setting-up the pi\nI won’t go into details, I mostly followed the instructions in this tutorial. Briefly, here are the main steps\n\ndownload raspbian lite\nSince I have no screen, no keyboard and the pi comes with a WiFi controller, the stretch lite is sufficient. Image can be found at raspberrypi.org\n\n\nformat SD card\nusing disk utility, choose MS-DOS FAT file system\n\n\ninstall raspbian\nEnsure your SD card is the second disk (/dev/disk2), otherwise do adapt to the correct one!\nunzip 2017-11-29-raspbian-stretch-lite.zip\nsudo dd bs=1m if=2017-11-29-raspbian-stretch-lite.img of=/dev/rdisk2\n\n\nenable ssh\nOnce copied, you can enable ssh by creating an empty file at the SD card root\ncd /Volumes/boot/\ntouch ssh\n\n\nenable wifi\nIn order to connect to the pi without screen / keyboard, wifi needs to be configured right away. At the same location (/Volumes/boot) add a file named wpa_supplicant.conf\nwhich contains:\nnetwork={\n        ssid=\"your_network_ssid\"\n        psk=\"xxx\"\n        key_mgmt=WPA-PSK\n}\nOf note, I recently acquired a pi zeroWH, for which I had to add 3 lines (StackExchange question).\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\ncountry=FR\nnetwork={\n        ssid=\"your_network_ssid\"\n        psk=\"xxx\"\n        key_mgmt=WPA-PSK\n}\n\n\nconnect to pi\nonce the raspberrypi booted, try to find its IP\nnmap -sn 192.168.1.0/24\nwhich gives:\nStarting Nmap 7.60 ( https://nmap.org ) at 2017-12-08 22:44 CET\nNmap scan report for 192.168.1.27\nHost is up (0.0071s latency).\nNmap scan report for 192.168.1.254\nHost is up (0.0048s latency).\nNmap done: 256 IP addresses (2 hosts up) scanned in 11.71 seconds\n192.168.1.254 was the rooter, so pi was assigned 192.168.1.27\nssh pi@192.168.1.27 works.\nyou can also assign a fixed IP to your pi\n\n\nfinal configuration\nonce connected to the pi:\n\nrun sudo raspi-config to activate the camera\nchange password for the pi user\nset up locales and timezone\nupdate && upgrade raspbian stretch\nadd public ssh key to .ssh/authorized_keys for password less connection"
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#install-the-surveillance-system",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#install-the-surveillance-system",
    "title": "home surveillance monitored via telegram",
    "section": "install the surveillance system",
    "text": "install the surveillance system\nEven if, I’d like to have openCV like in this tutorial, it was way more work. Hence, the choice of motion\n\nmotion software\nI followed the instructions provided in this great tutorial by Bouvet. With some changes described below.\n\ncompilation\nsee from here https://motion-project.github.io/motion_build.html\nwget https://github.com/Motion-Project/motion/releases/download/release-4.1.1/pi_stretch_motion_4.1.1-1_armhf.deb\nsudo apt-get install gdebi-core\nsudo gdebi pi_stretch_motion_4.1.1-1_armhf.deb\n\n\n\nrun motion\nfirst, as Bouvet suggested, I copied the main config file\nmkdir ~/motion && cp /etc/motion/motion.conf ~/motion/\nand alter the new copy.\nrunning motion:\nmotion -c ~/motion/motion.conf\n\n\ntweaks to the initial tutorial\nI choose to get the videos and several other changes made to the motion version 4.1.1. and are reported in the complete diff page below\ndiff page for motion.conf\nThe initial values are reported in red, in green: the new ones.\n\n\n\nsee live streaming\nwith this configuration, you should see the live streaming from this URL: http://192.168.1.27:8081\nthe web control on port 8080 is disabled apart outside the pi, since we’ll use telegram to control motion\n\n\ndetection\nHere is an example of my kid being detected. The red rectangle works nicely\n\nBut of course, there are false alarms, such as when the light comes in/out suddenly\n\nthe parameter lightswitch 80 reduced the issue but it still exists."
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#communication-with-motion-via-telegram",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#communication-with-motion-via-telegram",
    "title": "home surveillance monitored via telegram",
    "section": "Communication with motion via telegram",
    "text": "Communication with motion via telegram\nNow comes the fun part. Receiving the motion detection by emails is fine, but it can be done via Telegram and the awesome API telepot. Eric told me about telegram bots and it looked promising. Actually, you can even send commands to your pi using your phone using those telegram bots.\nThe useful feature I implemented are:\n\nalerts. A motion is detected. Send the best picture to your telegram account.\npause / resume motion detection. Imagine you are away and for some reason (shadows, your own cat) you keep receiving alerts, you may want to remotely pause the detection. And of course, being able to resume it. Those commands are already in motion, we just need to talk to it.\nstatus. You haven’t received alerts, is the system running smoothly? You can ask for a confirmation that detection is on. Also, check if the camera is on.\nsnapshot. No alerts, but you’d like to get a snapshot at any time.\nvideo. Maybe the nicest feature IMHO. Sending picture to your phone for every detection is fine, but not all videos. Based on the picture you see, you’d like to get the video of the detection. Once again, by a command to a telegram bot, you receive the last video recorded.\n\n\ncreate mybot\nEric gave me the link to this tutorial\nOf course, I am assuming you already have our own telegram account.\nTalk to the BotFather and create mybot, you will receive a private token.\n\n\ninstall telepot\nback on the pi, install telepot with pip, assuming you installed python and pip.\npip install telepot\n\n\ntest sending message\n\nget the bot id\nimport telepot\nbot = telepot.Bot('your-token')\nbot.getMe()\nreturns {u'username': u'mybot', u'first_name': u'cat tracker', u'is_bot': True, u'id': 00000008}\n\n\nget your telegram id:\n\nsend a messages from telegram to mybot\nfetch your message on the pi\n\nfrom pprint import pprint\nresponse = bot.getUpdates()\npprint(response)\nyour id appears, such as: u’id’: 00000004\n\n\nbasic tests\n\nfor text\n\nbot.sendMessage(00000004, 'Hey!')\n\nfor picture\n\nbot.sendPhoto(00000004, photo=open('/home/pi/motion/detected/07-2018-01-06_205746-13.jpg', 'rb'), caption='motion detected')\n\n\ncreate commands for the bot\nAfter sending /setcommands to the BotFather:\ntime - Returns current time on pi\ncheck - Returns status of the camera\nstatus - Returns status of motion\npause - Pauses the motion detection\nresume - Resumes motion detection\nsnapshot - Returns current image\nvideo - Returns last recorded video\nOf note, it doesn’t prevent the bot to receive other commands, it just helps to display commands and select them in telegram.\n\n\npython script that listen\nhere the script listen_bot.py, derived from the telepot documentation.\nSome comments:\n\nthe last video when requested is fetched from the sub-folder vids. If we use the main folder of detection, the last video could be an incomplete one form a newer detection. Hence, the command in motion.conf to move a finished video to the vids folder.\nI failed to restrict the bot to communicate only with me. Might not be a big deal, but the code if chat_id != 00000008 is not working.\nthe webcontrol was set in the RAW mode. Then the retrieved text can be directly send to your telegram account\n\n#!/usr/bin/python2.7\n\nimport datetime\nimport telepot\nimport time\nimport requests\nimport os\nimport glob\nfrom telepot.loop import MessageLoop\n\ndef webcontrol(chat_id, type, cmd):\n    req = 'http://localhost:8080/0/'+type+'/'+cmd\n    res = requests.get(req)\n    bot.sendMessage(chat_id, res.text)\n\ndef handle(msg):\n    chat_id = msg['chat']['id']\n    command = msg['text']\n    #should work thanks to Winston\n    if msg['from']['id'] != 00000008:\n        bot.sendMessage(chat_id, \"Sorry this is a personal bot. Access Denied!\")\n        exit(1)\n\n    print 'Got command: %s' % command\n\n    if command == '/snapshot':\n        requests.get('http://localhost:8080/0/action/snapshot')\n    elif command == '/status':\n        webcontrol(chat_id, 'detection', 'status')\n    elif command == '/pause':\n        webcontrol(chat_id, 'detection', 'pause')\n    elif command == '/resume':\n        webcontrol(chat_id, 'detection', 'start')\n    elif command == '/check':\n        webcontrol(chat_id, 'detection', 'connection')\n    elif command == '/time':\n        bot.sendMessage(chat_id, 'now is '+str(datetime.datetime.now()))\n    elif command == '/video':\n        # the most recent video in this particular folder of complete vids\n        video = max(glob.iglob('/home/pi/motion/detected/vids/*.mp4'), key=os.path.getctime)\n        # send video, adapt the the first argument to your own telegram id\n        bot.sendVideo(00000008, video=open(video, 'rb'), caption='last video')\n    else:\n        bot.sendMessage(chat_id, \"sorry, I don't know the command \"+command)\n# adapt the following to the bot_id:bot_token\nbot = telepot.Bot('0000000004:bot_token')\n\nMessageLoop(bot, handle).run_as_thread()\nprint 'I am listening ...'\n\nwhile 1:\n    time.sleep(10)\nNow if the both listen_bot.py and motion -c ~/motion/motion.conf are running, the system should work.\n\n\nsending scripts\nthey are called in the motion.conf file.\nfirst, send_detection.py\n#!/usr/bin/python2.7\n\nimport telepot\nimport sys\n\nbot = telepot.Bot('0000000004:bot_token')\n\npic = sys.argv[1]\n\n# change caption if it is a snapshot or motion\nif pic.endswith(\"snapshot.jpg\"):\n    cap = 'snapshot'\nelse:\n    cap = 'motion detected'\n\nbot.sendPhoto(00000004, photo=open(pic, 'rb'), caption=cap)\n\nexit(0)\nsecond, send_message.py\n#!/usr/bin/python2.7\n\nimport telepot\nimport sys\n\nbot = telepot.Bot('0000000004:bot_token')\n\ntext = sys.argv[1]\n\nbot.sendMessage(00000004, text)\n\n\nrun scripts at startup\nEdit 2018-06-19\n\nfor listening\nI am now using systemd. Cleaner and safer.\nHere, the following is working, but I am sure this is the right way to do, so use we care.\nadd the file listen.service in the folder /etc/systemd/system:\n[Unit]\nDescription=Listen to foo telegram bot\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/python2.7 -u listen_bot.py\nWorkingDirectory=/home/pi/motion/\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=motion\n\n[Install]\nWantedBy=multi-user.target\nnow as example, you can check the status of this new service listen\npi@raspberrypi:/etc/systemd/system $ service listen status\n● listen.service - Listen to foo telegram bot\n   Loaded: loaded (/etc/systemd/system/listen.service; enabled; vendor preset: enabled)\n   Active: active (running) since Sun 2018-05-13 21:51:50 CEST; 1 months 6 days ago\n Main PID: 502 (python2.7)\n   CGroup: /system.slice/listen.service\n           └─502 /usr/bin/python2.7 -u listen_bot.py\n\nMay 13 21:51:50 raspberrypi systemd[1]: Started Listen to foo telegram bot.\nMay 13 21:51:51 raspberrypi python2.7[502]: I am listening ...\nJun 19 20:52:17 raspberrypi python2.7[502]: Got command: /time\nAnd, safer since both motion and listen are running as the user motion who does not have sudo rights.\n\n\nFor motion\nI am now using the daemon mode to only benefit from systemd\n\npoint the usual conf file towards the tweaked version in your home\n\ncd /etc/motion\nmv motion.conf motion.conf.bak\nln -s /home/pi/motion/motion.conf .\nbe sure to have the correct smblink\nmotion.conf -&gt; /home/pi/motion/motion.conf\n\n\n\nScreenshots\nHere are some examples of the telegram window\n\nreceived a notification and later on, /check if connection is still on.\n\n\n\nreceived notification and ask for the corresponding video\n\n\nthis video works as a GIF directly in the window:\n\n\n\ngif file\n\n\n\n\npause the detection, and since no motion can be detected, ask for a snapshot\n\n\n\n\n\nTODO\nDespite a functional system, some improvements I’d like to achieve:\n\nrestrict the bot to one user: see Winston Smith recommendation in comments, seems to work nicely\nadd gracefull stop for listen service\nI bought a IP camera, and motion should work with both. Haven’t spent enough time configuring it\nremove pics/videos older than xx days to save space\nrun the 2 services as a user without sudo rights\nlook into better settings for NoIR camera using this thread"
  },
  {
    "objectID": "posts/diy-raspberry-monitored-via-telegram/index.html#conclusion",
    "href": "posts/diy-raspberry-monitored-via-telegram/index.html#conclusion",
    "title": "home surveillance monitored via telegram",
    "section": "Conclusion",
    "text": "Conclusion\nBeyond the initial goal, catch the neighbor cats coming in, which actually I don’t care about, it was fun to set-up the whole thing. Moreover, telegram offers a great service and offers a great interface for many applications. I knew about the TeleR bot, that is actually easy to set-up.\nDon’t hesitate to leave a comment below for any remarks or improvements that I overseen."
  },
  {
    "objectID": "posts/tweening-a-poisson-distribution/index.html",
    "href": "posts/tweening-a-poisson-distribution/index.html",
    "title": "tweening a Poisson distribution",
    "section": "",
    "text": "with gganimate and tweenr\nusing \\(\\lambda\\) from 5 to 55 with a step of 5.\n\nlibrary(tidyverse)\nlibrary(gganimate)\nlibrary(tweenr) # devtools::install_github(\"thomasp85/tweenr\")\n\ncrossing(tibble(x = 1:50),\n         tibble(lambda = c(2, seq(5, 55, 5)))) %&gt;%\n  mutate(dpoi = dpois(x, lambda = lambda)) -&gt; poi_df\n\nmy_list &lt;- map(unique(poi_df$lambda), ~ filter(poi_df, lambda == .x) %&gt;% as.data.frame())\n\ntween_states(my_list, tweenlength = 7, statelength = 1, ease = \"cubic-in-out\", nframes = 50) %&gt;%\n  \n  ggplot(aes(x, dpoi, frame = .frame)) + \n  geom_col(position = \"dodge\", width = 2.0) +\n  scale_y_continuous(expand = c(0, 0)) +\n  labs(x = NULL) +\n  theme_classic(16) -&gt; p\n\ngganimate(p, title_frame = FALSE, ani.width = 600, ani.height = 450, interval = 0.1, filename = \"poisson.gif\")"
  }
]